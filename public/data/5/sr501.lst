CCS PCM C Compiler, Version 5.051, 43599               06-Thg6-25 23:19

               Filename:   C:\Users\Victus\Desktop\tett\sr501.lst

               ROM used:   459 words (6%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           13 (4%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   06A
0003:  NOP
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT 
.................... #use delay(clock=12000000) 
*
0011:  MOVLW  27
0012:  MOVWF  04
0013:  BCF    03.7
0014:  MOVF   00,W
0015:  BTFSC  03.2
0016:  GOTO   025
0017:  MOVLW  03
0018:  MOVWF  78
0019:  CLRF   77
001A:  DECFSZ 77,F
001B:  GOTO   01A
001C:  DECFSZ 78,F
001D:  GOTO   019
001E:  MOVLW  E3
001F:  MOVWF  77
0020:  DECFSZ 77,F
0021:  GOTO   020
0022:  NOP
0023:  DECFSZ 00,F
0024:  GOTO   017
0025:  RETURN
....................  
.................... #define cambien     PIN_A1 
.................... #define nutmo       PIN_A2 
.................... #define nutchedo    PIN_A3 
.................... #define nutdong     PIN_A4 
....................  
.................... #define ledxanh     PIN_D2 
.................... #define leddo       PIN_D3 
....................  
.................... #define IN1         PIN_C0 
.................... #define IN2         PIN_C1 
....................  
.................... #define ctmo        PIN_B1 
.................... #define ctdong      PIN_B0 
....................  
.................... int chedotay = 0; 
.................... int chedobantudong = 0; 
.................... int trangthaitruoc = 1; 
.................... int modangchay = 0; 
.................... int dongdangchay = 0; 
....................  
.................... void quaythuan() { 
....................    output_high(IN1); 
*
0050:  BCF    25.0
0051:  MOVF   25,W
0052:  BSF    03.5
0053:  MOVWF  07
0054:  BCF    03.5
0055:  BSF    07.0
....................    output_low(IN2); 
0056:  BCF    25.1
0057:  MOVF   25,W
0058:  BSF    03.5
0059:  MOVWF  07
005A:  BCF    03.5
005B:  BCF    07.1
005C:  RETURN
.................... } 
....................  
.................... void quaynguoc() { 
....................    output_low(IN1); 
005D:  BCF    25.0
005E:  MOVF   25,W
005F:  BSF    03.5
0060:  MOVWF  07
0061:  BCF    03.5
0062:  BCF    07.0
....................    output_high(IN2); 
0063:  BCF    25.1
0064:  MOVF   25,W
0065:  BSF    03.5
0066:  MOVWF  07
0067:  BCF    03.5
0068:  BSF    07.1
0069:  RETURN
.................... } 
....................  
.................... void dung() { 
....................    output_low(IN1); 
*
0004:  BCF    25.0
0005:  MOVF   25,W
0006:  BSF    03.5
0007:  MOVWF  07
0008:  BCF    03.5
0009:  BCF    07.0
....................    output_low(IN2); 
000A:  BCF    25.1
000B:  MOVF   25,W
000C:  BSF    03.5
000D:  MOVWF  07
000E:  BCF    03.5
000F:  BCF    07.1
0010:  RETURN
.................... } 
....................  
.................... void chuyenchedo() { 
....................    delay_ms(20); 
*
0026:  MOVLW  14
0027:  MOVWF  27
0028:  CALL   011
....................    if(input(nutchedo) == 0 && trangthaitruoc == 1) { 
0029:  BSF    03.5
002A:  BSF    05.3
002B:  BCF    03.5
002C:  BTFSC  05.3
002D:  GOTO   049
002E:  DECFSZ 22,W
002F:  GOTO   049
....................       if(chedotay) { 
0030:  MOVF   20,F
0031:  BTFSC  03.2
0032:  GOTO   037
....................          chedotay = 0; 
0033:  CLRF   20
....................          chedobantudong = 1; 
0034:  MOVLW  01
0035:  MOVWF  21
....................       } else if(chedobantudong) { 
0036:  GOTO   03E
0037:  MOVF   21,F
0038:  BTFSC  03.2
0039:  GOTO   03C
....................          chedobantudong = 0; 
003A:  CLRF   21
....................       } else { 
003B:  GOTO   03E
....................          chedotay = 1; 
003C:  MOVLW  01
003D:  MOVWF  20
....................       } 
....................       modangchay = 0; 
003E:  CLRF   23
....................       dongdangchay = 0; 
003F:  CLRF   24
....................       dung(); 
0040:  CALL   004
....................       output_low(ledxanh); 
0041:  BSF    03.5
0042:  BCF    08.2
0043:  BCF    03.5
0044:  BCF    08.2
....................       output_low(leddo); 
0045:  BSF    03.5
0046:  BCF    08.3
0047:  BCF    03.5
0048:  BCF    08.3
....................    } 
....................    trangthaitruoc = input(nutchedo); 
0049:  BSF    03.5
004A:  BSF    05.3
004B:  BCF    03.5
004C:  CLRF   22
004D:  BTFSC  05.3
004E:  INCF   22,F
004F:  RETURN
.................... } 
....................  
.................... void main() { 
*
006A:  MOVF   03,W
006B:  ANDLW  1F
006C:  MOVWF  03
006D:  CLRF   20
006E:  CLRF   21
006F:  MOVLW  01
0070:  MOVWF  22
0071:  CLRF   23
0072:  CLRF   24
0073:  MOVLW  FF
0074:  MOVWF  25
0075:  BSF    03.5
0076:  BSF    03.6
0077:  MOVF   09,W
0078:  ANDLW  C0
0079:  MOVWF  09
007A:  BCF    03.6
007B:  BCF    1F.4
007C:  BCF    1F.5
007D:  MOVLW  00
007E:  BSF    03.6
007F:  MOVWF  08
0080:  BCF    03.5
0081:  CLRF   07
0082:  CLRF   08
0083:  CLRF   09
0084:  BCF    03.7
....................    set_tris_a(0xFF);  
0085:  MOVLW  FF
0086:  BSF    03.5
0087:  BCF    03.6
0088:  MOVWF  05
....................    set_tris_b(0xFF);  
0089:  MOVWF  06
....................    set_tris_c(0x00);  
008A:  MOVLW  00
008B:  MOVWF  07
008C:  BCF    03.5
008D:  MOVWF  25
....................    set_tris_d(0x00);  
008E:  BSF    03.5
008F:  MOVWF  08
....................  
....................    output_low(ledxanh); 
0090:  BCF    08.2
0091:  BCF    03.5
0092:  BCF    08.2
....................    output_low(leddo); 
0093:  BSF    03.5
0094:  BCF    08.3
0095:  BCF    03.5
0096:  BCF    08.3
....................    dung(); 
0097:  CALL   004
....................  
....................    while(TRUE) { 
....................       chuyenchedo(); 
0098:  CALL   026
....................       if(chedotay) { 
0099:  MOVF   20,F
009A:  BTFSC  03.2
009B:  GOTO   0DA
....................          if(input(nutmo) == 0) { 
009C:  BSF    03.5
009D:  BSF    05.2
009E:  BCF    03.5
009F:  BTFSC  05.2
00A0:  GOTO   0B6
....................             if(!input(ctmo)) { 
00A1:  BSF    03.5
00A2:  BSF    06.1
00A3:  BCF    03.5
00A4:  BTFSC  06.1
00A5:  GOTO   0AC
....................                dung(); 
00A6:  CALL   004
....................                output_low(leddo); 
00A7:  BSF    03.5
00A8:  BCF    08.3
00A9:  BCF    03.5
00AA:  BCF    08.3
....................             } else { 
00AB:  GOTO   0B5
....................                quaythuan(); 
00AC:  CALL   050
....................                output_low(ledxanh); 
00AD:  BSF    03.5
00AE:  BCF    08.2
00AF:  BCF    03.5
00B0:  BCF    08.2
....................                output_high(leddo); 
00B1:  BSF    03.5
00B2:  BCF    08.3
00B3:  BCF    03.5
00B4:  BSF    08.3
....................             } 
....................          } else if(input(nutdong) == 0) { 
00B5:  GOTO   0D9
00B6:  BSF    03.5
00B7:  BSF    05.4
00B8:  BCF    03.5
00B9:  BTFSC  05.4
00BA:  GOTO   0D0
....................             if(!input(ctdong)) { 
00BB:  BSF    03.5
00BC:  BSF    06.0
00BD:  BCF    03.5
00BE:  BTFSC  06.0
00BF:  GOTO   0C6
....................                dung(); 
00C0:  CALL   004
....................                output_low(leddo); 
00C1:  BSF    03.5
00C2:  BCF    08.3
00C3:  BCF    03.5
00C4:  BCF    08.3
....................             } else { 
00C5:  GOTO   0CF
....................                quaynguoc(); 
00C6:  CALL   05D
....................                output_low(ledxanh); 
00C7:  BSF    03.5
00C8:  BCF    08.2
00C9:  BCF    03.5
00CA:  BCF    08.2
....................                output_high(leddo); 
00CB:  BSF    03.5
00CC:  BCF    08.3
00CD:  BCF    03.5
00CE:  BSF    08.3
....................             } 
....................          } else { 
00CF:  GOTO   0D9
....................             dung(); 
00D0:  CALL   004
....................             output_low(ledxanh); 
00D1:  BSF    03.5
00D2:  BCF    08.2
00D3:  BCF    03.5
00D4:  BCF    08.2
....................             output_low(leddo); 
00D5:  BSF    03.5
00D6:  BCF    08.3
00D7:  BCF    03.5
00D8:  BCF    08.3
....................          } 
....................       } 
00D9:  GOTO   1C9
....................  
....................       else if(chedobantudong) { 
00DA:  MOVF   21,F
00DB:  BTFSC  03.2
00DC:  GOTO   130
....................          if(input(nutmo) == 0 && modangchay == 0 && input(ctmo)) { 
00DD:  BSF    03.5
00DE:  BSF    05.2
00DF:  BCF    03.5
00E0:  BTFSC  05.2
00E1:  GOTO   0F1
00E2:  MOVF   23,F
00E3:  BTFSS  03.2
00E4:  GOTO   0F1
00E5:  BSF    03.5
00E6:  BSF    06.1
00E7:  BCF    03.5
00E8:  BTFSS  06.1
00E9:  GOTO   0F1
....................             modangchay = 1; 
00EA:  MOVLW  01
00EB:  MOVWF  23
....................             quaythuan(); 
00EC:  CALL   050
....................             output_high(leddo); 
00ED:  BSF    03.5
00EE:  BCF    08.3
00EF:  BCF    03.5
00F0:  BSF    08.3
....................          } 
....................  
....................          if(input(nutdong) == 0 && dongdangchay == 0 && input(ctdong)) { 
00F1:  BSF    03.5
00F2:  BSF    05.4
00F3:  BCF    03.5
00F4:  BTFSC  05.4
00F5:  GOTO   105
00F6:  MOVF   24,F
00F7:  BTFSS  03.2
00F8:  GOTO   105
00F9:  BSF    03.5
00FA:  BSF    06.0
00FB:  BCF    03.5
00FC:  BTFSS  06.0
00FD:  GOTO   105
....................             dongdangchay = 1; 
00FE:  MOVLW  01
00FF:  MOVWF  24
....................             quaynguoc(); 
0100:  CALL   05D
....................             output_high(leddo); 
0101:  BSF    03.5
0102:  BCF    08.3
0103:  BCF    03.5
0104:  BSF    08.3
....................          } 
....................  
....................          if(modangchay && !input(ctmo)) { 
0105:  MOVF   23,F
0106:  BTFSC  03.2
0107:  GOTO   113
0108:  BSF    03.5
0109:  BSF    06.1
010A:  BCF    03.5
010B:  BTFSC  06.1
010C:  GOTO   113
....................             modangchay = 0; 
010D:  CLRF   23
....................             dung(); 
010E:  CALL   004
....................             output_low(leddo); 
010F:  BSF    03.5
0110:  BCF    08.3
0111:  BCF    03.5
0112:  BCF    08.3
....................          } 
....................  
....................          if(dongdangchay && !input(ctdong)) { 
0113:  MOVF   24,F
0114:  BTFSC  03.2
0115:  GOTO   121
0116:  BSF    03.5
0117:  BSF    06.0
0118:  BCF    03.5
0119:  BTFSC  06.0
011A:  GOTO   121
....................             dongdangchay = 0; 
011B:  CLRF   24
....................             dung(); 
011C:  CALL   004
....................             output_low(leddo); 
011D:  BSF    03.5
011E:  BCF    08.3
011F:  BCF    03.5
0120:  BCF    08.3
....................          } 
....................  
....................          if(!modangchay && !dongdangchay) { 
0121:  MOVF   23,F
0122:  BTFSS  03.2
0123:  GOTO   12F
0124:  MOVF   24,F
0125:  BTFSS  03.2
0126:  GOTO   12F
....................             output_low(ledxanh); 
0127:  BSF    03.5
0128:  BCF    08.2
0129:  BCF    03.5
012A:  BCF    08.2
....................             output_low(leddo); 
012B:  BSF    03.5
012C:  BCF    08.3
012D:  BCF    03.5
012E:  BCF    08.3
....................          } 
....................       } 
012F:  GOTO   1C9
....................  
....................       else { 
....................          if(input(cambien)) { 
0130:  BSF    03.5
0131:  BSF    05.1
0132:  BCF    03.5
0133:  BTFSS  05.1
0134:  GOTO   1C9
....................             output_high(ledxanh); 
0135:  BSF    03.5
0136:  BCF    08.2
0137:  BCF    03.5
0138:  BSF    08.2
....................             delay_ms(200); 
0139:  MOVLW  C8
013A:  MOVWF  27
013B:  CALL   011
....................             output_low(ledxanh); 
013C:  BSF    03.5
013D:  BCF    08.2
013E:  BCF    03.5
013F:  BCF    08.2
....................             output_high(leddo); 
0140:  BSF    03.5
0141:  BCF    08.3
0142:  BCF    03.5
0143:  BSF    08.3
....................  
....................             if(input(ctmo)) { 
0144:  BSF    03.5
0145:  BSF    06.1
0146:  BCF    03.5
0147:  BTFSS  06.1
0148:  GOTO   162
....................                quaythuan(); 
0149:  CALL   050
....................                while(input(ctmo)) { 
014A:  BSF    03.5
014B:  BSF    06.1
014C:  BCF    03.5
014D:  BTFSS  06.1
014E:  GOTO   157
....................                   chuyenchedo(); 
014F:  CALL   026
....................                   if(chedotay || chedobantudong) break; 
0150:  MOVF   20,F
0151:  BTFSS  03.2
0152:  GOTO   155
0153:  MOVF   21,F
0154:  BTFSS  03.2
0155:  GOTO   157
0156:  GOTO   14A
....................                } 
....................                dung(); 
0157:  CALL   004
....................                output_low(leddo); 
0158:  BSF    03.5
0159:  BCF    08.3
015A:  BCF    03.5
015B:  BCF    08.3
....................                if(chedotay || chedobantudong) continue; 
015C:  MOVF   20,F
015D:  BTFSS  03.2
015E:  GOTO   161
015F:  MOVF   21,F
0160:  BTFSS  03.2
0161:  GOTO   098
....................             } 
....................  
....................             delay_ms(2000); 
0162:  MOVLW  08
0163:  MOVWF  26
0164:  MOVLW  FA
0165:  MOVWF  27
0166:  CALL   011
0167:  DECFSZ 26,F
0168:  GOTO   164
....................             if(chedotay || chedobantudong) continue; 
0169:  MOVF   20,F
016A:  BTFSS  03.2
016B:  GOTO   16E
016C:  MOVF   21,F
016D:  BTFSS  03.2
016E:  GOTO   098
....................  
.................... dongcua: 
....................             if(input(ctdong)) { 
016F:  BSF    03.5
0170:  BSF    06.0
0171:  BCF    03.5
0172:  BTFSS  06.0
0173:  GOTO   1C5
....................                output_high(leddo); 
0174:  BSF    03.5
0175:  BCF    08.3
0176:  BCF    03.5
0177:  BSF    08.3
....................                quaynguoc(); 
0178:  CALL   05D
....................                while(input(ctdong)) { 
0179:  BSF    03.5
017A:  BSF    06.0
017B:  BCF    03.5
017C:  BTFSS  06.0
017D:  GOTO   1C0
....................                   chuyenchedo(); 
017E:  CALL   026
....................                   if(chedotay || chedobantudong) break; 
017F:  MOVF   20,F
0180:  BTFSS  03.2
0181:  GOTO   184
0182:  MOVF   21,F
0183:  BTFSS  03.2
0184:  GOTO   1C0
....................  
....................                   if(input(cambien)) { 
0185:  BSF    03.5
0186:  BSF    05.1
0187:  BCF    03.5
0188:  BTFSS  05.1
0189:  GOTO   1BF
....................                      if(input(ctmo)) { 
018A:  BSF    03.5
018B:  BSF    06.1
018C:  BCF    03.5
018D:  BTFSS  06.1
018E:  GOTO   1B1
....................                         output_high(ledxanh); 
018F:  BSF    03.5
0190:  BCF    08.2
0191:  BCF    03.5
0192:  BSF    08.2
....................                         delay_ms(200); 
0193:  MOVLW  C8
0194:  MOVWF  27
0195:  CALL   011
....................                         output_low(ledxanh); 
0196:  BSF    03.5
0197:  BCF    08.2
0198:  BCF    03.5
0199:  BCF    08.2
....................                         quaythuan(); 
019A:  CALL   050
....................                         while(input(ctmo)) { 
019B:  BSF    03.5
019C:  BSF    06.1
019D:  BCF    03.5
019E:  BTFSS  06.1
019F:  GOTO   1A8
....................                            chuyenchedo(); 
01A0:  CALL   026
....................                            if(chedotay || chedobantudong) break; 
01A1:  MOVF   20,F
01A2:  BTFSS  03.2
01A3:  GOTO   1A6
01A4:  MOVF   21,F
01A5:  BTFSS  03.2
01A6:  GOTO   1A8
01A7:  GOTO   19B
....................                         } 
....................                         dung(); 
01A8:  CALL   004
....................                         output_low(leddo); 
01A9:  BSF    03.5
01AA:  BCF    08.3
01AB:  BCF    03.5
01AC:  BCF    08.3
....................                         output_low(ledxanh); 
01AD:  BSF    03.5
01AE:  BCF    08.2
01AF:  BCF    03.5
01B0:  BCF    08.2
....................                      } 
....................                      delay_ms(2000); 
01B1:  MOVLW  08
01B2:  MOVWF  26
01B3:  MOVLW  FA
01B4:  MOVWF  27
01B5:  CALL   011
01B6:  DECFSZ 26,F
01B7:  GOTO   1B3
....................                      if(chedotay || chedobantudong) continue; 
01B8:  MOVF   20,F
01B9:  BTFSS  03.2
01BA:  GOTO   1BD
01BB:  MOVF   21,F
01BC:  BTFSS  03.2
01BD:  GOTO   179
....................                      goto dongcua; 
01BE:  GOTO   16F
....................                   } 
01BF:  GOTO   179
....................                } 
....................                dung(); 
01C0:  CALL   004
....................                output_low(leddo); 
01C1:  BSF    03.5
01C2:  BCF    08.3
01C3:  BCF    03.5
01C4:  BCF    08.3
....................             } 
....................  
....................             output_low(ledxanh); 
01C5:  BSF    03.5
01C6:  BCF    08.2
01C7:  BCF    03.5
01C8:  BCF    08.2
....................          } 
....................       } 
01C9:  GOTO   098
....................    } 
.................... } 
....................  
01CA:  SLEEP

Configuration Fuses:
   Word  1: 2FE1   XT NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 0700   BORV40 NOWRT
