#include <16F887.h>
#fuses INTRC_IO,NOWDT,NOLVP,NOPUT
#use delay(clock=8000000)
#use fast_io(A)
#use fast_io(C)
#use fast_io(D)

#define PIR      PIN_A0
#define LED_XANH PIN_D2
#define LED_DO   PIN_D3
#define SERVO    PIN_C2

int16 goc = 0;

void servo_write(int16 angle) {
   int16 pulse_width;
   if(angle < 0) angle = 0;
   if(angle > 90) angle = 90;
   pulse_width = 500 + ((int32)angle * 2000 / 180);  // MG996R
   output_high(SERVO);
   delay_us(pulse_width);
   output_low(SERVO);
   delay_ms(20 - pulse_width / 1000);
}

void servo_giu_goc(int angle, int time_ms) {
   int count = time_ms / 20;
   for(int i = 0; i < count; i++) {
      servo_write(angle);
   }
}

void servo_quay_cham(int from, int to, int delay_step) {
   if(from < to) {
      for(int i = from; i <= to; i++) {
         servo_write(i);
         delay_ms(delay_step);
      }
   } else {
      for(int i = from; i >= to; i--) {
         servo_write(i);
         delay_ms(delay_step);
      }
   }
   goc = to;
}

void main() {
   set_tris_a(0xFF); // PIR input
   set_tris_c(0x00); // Servo output
   set_tris_d(0x00); // LED output

   output_low(LED_XANH);
   output_low(LED_DO);
   output_low(SERVO);

   while(true) {
      if(input(PIR)) {
         output_high(LED_XANH);
         
         delay_ms(1000); // ch? xác nh?n có ngu?i

         output_high(LED_DO);
         servo_quay_cham(goc, 90, 30);  // m? ch?m
         servo_giu_goc(90, 5000);       // gi? ? góc 90 trong 5s
         output_low(LED_DO);

         delay_ms(3000); // d?i 3 giây r?i m?i dóng

         output_high(LED_DO);
         for(int i = goc; i >= 0; i--) {
            if(input(PIR)) {
               // n?u phát hi?n ngu?i khi dang dóng
               servo_quay_cham(i, 90, 30);    // m? l?i
               servo_giu_goc(90, 5000);       // gi? l?i 5s
               delay_ms(3000);                // ch? 3 giây
               i = 91;                        // reset vòng for quay l?i t? 90
               continue;
            }

            servo_write(i);
            delay_ms(30);
            goc = i;

            if(input(PIR))
               output_high(LED_XANH);
            else
               output_low(LED_XANH);
         }

         output_low(LED_DO); // t?t dèn d? khi dóng xong

         // ch? c?m bi?n d?ng phát hi?n
         while(input(PIR)) {
            output_high(LED_XANH);
            delay_ms(10);
         }
         output_low(LED_XANH);
      }
      else {
         output_low(LED_XANH);
         delay_ms(10);
      }
   }
}

