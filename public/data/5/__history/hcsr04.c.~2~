#include <16F887.h>
#fuses XT, NOWDT, NOMCLR
#use delay(clock=12000000)

#define PIR          PIN_A0
#define LED_XANH     PIN_D2
#define LED_DO       PIN_D3
#define IN1          PIN_C0
#define IN2          PIN_C1
#define LIMIT_OPEN   PIN_B0  // pull-up: nh?n = 0
#define LIMIT_CLOSE  PIN_B1  // pull-up: nh?n = 0

void motor_forward() { output_high(IN1);  output_low(IN2); }
void motor_reverse() { output_low(IN1);   output_high(IN2); }
void motor_stop()    { output_low(IN1);   output_low(IN2); }

void main() {
   //  I/O setup
   set_tris_a(0xFF);    // RA0 input (PIR)
   set_tris_b(0xFF);    // RB0/RB1 input (limit switches)
   set_tris_c(0x00);    // RC0/RC1 output (motor)
   set_tris_d(0x00);    // RD2/3 output (LEDs)

   output_low(LED_XANH);
   output_low(LED_DO);
   motor_stop();

   while(TRUE) {
     // --- 1) Khi PIR kích ho?t: vào pha M? c?a ---
     if(input(PIR)) {
       // B?t LED xanh nh?p nháy 1 l?n
       output_high(LED_XANH);
       delay_ms(500);  // LED sáng trong 500ms
       output_low(LED_XANH);

       // B?t LED d? và quay thu?n
       output_high(LED_DO);
       motor_forward();

       // Ch? ch?m công t?c m? h?t
       while(input(LIMIT_OPEN)) {
         // n?u PIR m?t d?t ng?t, ta v?n ti?p t?c ch? limit_open
       }

       // D?ng ngay khi ch?m
       motor_stop();
       output_low(LED_DO);

       // --- 2) Delay t?m (ví d? 2s) tru?c khi dóng ---
       delay_ms(2000);

       // --- 3) Pha ÐÓNG c?a ---
       output_high(LED_DO);
       motor_reverse();

       // Ch? ch?m công t?c dóng **ho?c** PIR l?i kích
       while(input(LIMIT_CLOSE)) {
         if(input(PIR)) {
            // N?u có ngu?i trong khi dóng ? quay m? luôn
            motor_forward();
            output_high(LED_XANH);
            // ch? d?n limit_open
            while(input(LIMIT_OPEN));
            // d?ng và thoát
            motor_stop();
            output_low(LED_DO);
            output_low(LED_XANH);
            break;
         }
       }

       // D?ng khi limit_close ch?m
       motor_stop();
       output_low(LED_DO);
       output_low(LED_XANH);
     }
   }
}

