#include <16F887.h>
#fuses XT, NOWDT, NOPUT, NOLVP
#use delay(clock=12000000)

#define PIR        PIN_A0
#define LED_XANH   PIN_D2
#define LED_DO     PIN_D3
#define IN1        PIN_C0
#define IN2        PIN_C1
#define ENA        PIN_C2
#define LIMIT_MO   PIN_B0
#define LIMIT_DONG PIN_B1

// Hàm ch?ng rung và xác nh?n tín hi?u ?n d?nh
int1 debounce_input(int pin, int delay_ms, int min_stable_ms) {
   if (input(pin)) {
      delay_ms(delay_ms); // Ch? tín hi?u ?n d?nh l?n d?u
      if (input(pin)) {
         // Ki?m tra tín hi?u duy trì trong min_stable_ms
         for (int i = 0; i < min_stable_ms; i += delay_ms) {
            if (!input(pin)) return 0;
            delay_ms(delay_ms);
         }
         return 1;
      }
   }
   return 0;
}

// Hàm debug b?ng nh?p nháy LED_XANH
void debug_blink(int count) {
   for (int i = 0; i < count; i++) {
      output_high(LED_XANH);
      delay_ms(100);
      output_low(LED_XANH);
      delay_ms(100);
   }
}

void motor_mo_cham() {
   output_low(IN1); // Ð?m b?o IN1 th?p tru?c
   output_low(IN2); // Ð?m b?o IN2 th?p tru?c
   delay_ms(10);    // Ch? d? tránh nhi?u
   output_high(IN1);
   output_low(IN2);
   setup_ccp1(CCP_PWM);
   set_pwm1_duty((int16)230); // Duty cycle 90% d? d?m b?o L298N quay ?n d?nh
   output_high(LED_DO);       // B?t dèn d? khi d?ng co quay
}

void motor_dong_cham() {
   output_low(IN1); // Ð?m b?o IN1 th?p tru?c
   output_low(IN2); // Ð?m b?o IN2 th?p tru?c
   delay_ms(10);    // Ch? d? tránh nhi?u
   output_low(IN1);
   output_high(IN2);
   setup_ccp1(CCP_PWM);
   set_pwm1_duty((int16)230); // Duty cycle 90% d? d?m b?o L298N quay ?n d?nh
   output_high(LED_DO);       // B?t dèn d? khi d?ng co quay
}

void motor_dung() {
   output_low(IN1);
   output_low(IN2);
   setup_ccp1(CCP_OFF); // T?t PWM
   output_low(ENA);     // Ð?m b?o ENA ? m?c th?p
   output_low(LED_DO);  // T?t dèn d? khi d?ng co d?ng
   delay_ms(50);        // Ch? d? L298N ?n d?nh
}

void den_do_nhap_nhay() {
   for(int i = 0; i < 4; i++) {
      output_toggle(LED_DO);
      delay_ms(500);
   }
   output_low(LED_DO);
}

void main() {
   set_tris_a(0xFF); // RA0 input
   set_tris_b(0xFF); // RB0, RB1 input
   set_tris_c(0x00); // Motor
   set_tris_d(0x00); // LEDs

   output_low(LED_XANH);
   output_low(LED_DO);
   motor_dung();

   // C?u hình PWM v?i t?n s? ~1kHz
   setup_timer_2(T2_DIV_BY_4, 249, 1); // PR2 = 249, t?n s? PWM = 1kHz
   setup_ccp1(CCP_OFF); // Ban d?u t?t PWM

   while(TRUE) {
      // Ki?m tra PIR v?i ch?ng rung, yêu c?u tín hi?u ?n d?nh 1000ms
      if (debounce_input(PIR, 20, 1000)) {
         debug_blink(2); // Nh?p nháy 2 l?n d? báo nh?n tín hi?u PIR
         output_high(LED_XANH);
         motor_mo_cham();

         // Ch? t?i khi ch?m LIMIT_MO ho?c m?t tín hi?u PIR
         while (!debounce_input(LIMIT_MO, 20, 100)) {
            if (!debounce_input(PIR, 20, 100)) {
               debug_blink(3); // Nh?p nháy 3 l?n n?u m?t PIR
               break;
            }
         }

         motor_dung();
         output_low(LED_XANH);

         // Ch? 5 giây
         delay_ms(5000);

         // Nh?p nháy dèn d? tru?c khi quay ngh?ch
         den_do_nhap_nhay();

         // Quay ngh?ch
         motor_dong_cham();

         // Ki?m tra LIMIT_DONG ho?c tín hi?u PIR
         while (!debounce_input(LIMIT_DONG, 20, 100)) {
            if (debounce_input(PIR, 20, 1000)) {
               debug_blink(4); // Nh?p nháy 4 l?n n?u PIR xu?t hi?n khi quay ngh?ch
               motor_dung();
               delay_ms(200);
               output_high(LED_XANH);
               motor_mo_cham();
               while (!debounce_input(LIMIT_MO, 20, 100) && debounce_input(PIR, 20, 100));
               break;
            }
         }

         motor_dung();
         output_low(LED_XANH);
      }
   }
}
