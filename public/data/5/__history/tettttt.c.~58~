#include <16F887.h>
#fuses XT, NOWDT, NOMCLR
#use delay(clock=12000000)

// Ð?nh nghia chân
#define PIR         PIN_A0
#define BTN_STOP    PIN_A1
#define BTN_OPEN    PIN_A2
#define BTN_CLOSE   PIN_A3

#define LED_XANH    PIN_D2
#define LED_DO      PIN_D3
#define IN1         PIN_C0
#define IN2         PIN_C1

#define LIMIT_OPEN  PIN_B0  // Công t?c hành trình m? h?t
#define LIMIT_CLOSE PIN_B1  // Công t?c hành trình dóng h?t

// Hàm di?u khi?n d?ng co
void motor_forward() {
   output_high(IN1);
   output_low(IN2);
}

void motor_reverse() {
   output_low(IN1);
   output_high(IN2);
}

void motor_stop() {
   output_low(IN1);
   output_low(IN2);
}

// Hàm ki?m tra nút nh?n (m?c th?p do kéo lên)
int is_pressed(int pin) {
   return (input(pin) == 0);
}

// M? c?a
void open_door() {
   if(input(LIMIT_OPEN)) {
      output_high(LED_XANH);
      output_high(LED_DO);
      motor_forward();

      while(input(LIMIT_OPEN)) {
         if(!input(LIMIT_OPEN)) break;
         if(is_pressed(BTN_STOP)) {
            motor_stop();
            return;
         }
      }

      motor_stop();
      output_low(LED_DO);
   }
}

// Ðóng c?a
void close_door() {
   while(TRUE) {
      if(input(LIMIT_CLOSE)) {
         output_high(LED_DO);
         motor_reverse();

         int nguoi_phat_hien = 0;

         while(input(LIMIT_CLOSE)) {
            if(input(PIR)) {
               nguoi_phat_hien = 1;
               break;
            }
            if(is_pressed(BTN_STOP)) {
               motor_stop();
               return;
            }
         }

         motor_stop();
         output_low(LED_DO);

         if(nguoi_phat_hien) {
            open_door();
            continue; // l?p l?i d? dóng ti?p
         }
      }
      break;  // dóng xong
   }

   output_low(LED_XANH);
}

void main() {
   // C?u hình I/O
   set_tris_a(0xFF); // BTN + PIR input
   set_tris_b(0xFF); // Limit switch input
   set_tris_c(0x00); // Motor output
   set_tris_d(0x00); // LED output

   // Kh?i t?o
   output_low(LED_XANH);
   output_low(LED_DO);
   motor_stop();

   while(TRUE) {
      if(is_pressed(BTN_OPEN)) {
         open_door();
      }
      else if(is_pressed(BTN_CLOSE)) {
         close_door();
      }
      else if(input(PIR)) {
         open_door();
         close_door();
      }
   }
}

