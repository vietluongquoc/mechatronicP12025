#include <16F887.h>
#fuses XT, NOWDT, NOMCLR
#use delay(clock=12000000)

#define PIR         PIN_A0
#define LED_XANH    PIN_D2
#define LED_DO      PIN_D3
#define IN1         PIN_C0
#define IN2         PIN_C1
#define LIMIT_OPEN  PIN_D4
#define LIMIT_CLOSE PIN_D5

void motor_forward() {
   output_high(IN1);
   output_low(IN2);
}

void motor_reverse() {
   output_low(IN1);
   output_high(IN2);
}

void motor_stop() {
   output_low(IN1);
   output_low(IN2);
}

// Ch? công t?c m?
void wait_limit_open(int timeout_ms) {
   int count = timeout_ms / 50;
   for(int i = 0; i < count; i++) {
      if(input(LIMIT_OPEN)) break;
      delay_ms(50);
   }
}

// Ch? công t?c dóng
void wait_limit_close(int timeout_ms) {
   int count = timeout_ms / 50;
   for(int i = 0; i < count; i++) {
      if(input(LIMIT_CLOSE)) break;
      delay_ms(50);
   }
}

void main() {
   set_tris_a(0xFF); // PIR input
   set_tris_c(0x00); // Motor output
   set_tris_d(0xF0); // D2, D3 output; D4, D5 input (limit switches)

   output_low(LED_XANH);
   output_low(LED_DO);
   motor_stop();

   while(TRUE) {
      if(input(PIR)) {
         // M? c?a
         output_high(LED_XANH);
         output_high(LED_DO);
         motor_forward();
         wait_limit_open(5000);
         motor_stop();
         output_low(LED_DO);

         // Ch? 5 giây
         delay_ms(5000);

         // Ðóng c?a
         output_high(LED_DO);
         motor_reverse();

         for(int i = 0; i < 100; i++) {
            delay_ms(50);

            if(input(PIR)) {
               // Phát hi?n ngu?i khi dang dóng
               motor_forward();
               output_high(LED_XANH);
               wait_limit_open(5000);
               motor_stop();
               output_low(LED_DO);
               output_low(LED_XANH);
               break;
            }

            if(input(LIMIT_CLOSE)) {
               motor_stop();
               output_low(LED_DO);
               output_low(LED_XANH);
               break;
            }
         }

         motor_stop();
         output_low(LED_DO);
         output_low(LED_XANH);
      }
   }
}

