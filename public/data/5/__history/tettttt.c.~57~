#include <16F887.h>
#fuses XT, NOWDT, NOMCLR
#use delay(clock=12000000)

#define PIR           PIN_A0
#define BTN_STOP      PIN_A1
#define BTN_OPEN      PIN_A2
#define BTN_CLOSE     PIN_A3

#define LED_XANH      PIN_D2
#define LED_DO        PIN_D3
#define IN1           PIN_C0
#define IN2           PIN_C1

#define LIMIT_OPEN    PIN_B0
#define LIMIT_CLOSE   PIN_B1

void motor_forward() {
   output_high(IN1);
   output_low(IN2);
}

void motor_reverse() {
   output_low(IN1);
   output_high(IN2);
}

void motor_stop() {
   output_low(IN1);
   output_low(IN2);
}

int1 is_pressed(pin) {
   return (input(pin) == 0);  // Dùng di?n tr? kéo lên, nh?n = 0
}

void wait_until_limit(int mode) {
   // mode = 1: ch? m? h?t (LIMIT_OPEN = 0)
   // mode = 2: ch? dóng h?t (LIMIT_CLOSE = 0)

   while(TRUE) {
      if(mode == 1 && input(LIMIT_OPEN) == 0)
         break;
      if(mode == 2 && input(LIMIT_CLOSE) == 0)
         break;
      if(is_pressed(BTN_STOP)) {
         motor_stop();
         return;
      }
   }
   motor_stop();
}

void open_door() {
   if(input(LIMIT_OPEN)) {
      output_high(LED_XANH);
      output_high(LED_DO);
      motor_forward();
      wait_until_limit(1); // Ch? m? h?t
      output_low(LED_DO);
   }
}

void close_door() {
   if(input(LIMIT_CLOSE)) {
      output_high(LED_DO);
      motor_reverse();

      int nguoi_phat_hien = 0;

      while(input(LIMIT_CLOSE)) {
         if(input(PIR)) {
            nguoi_phat_hien = 1;
            break;
         }
         if(is_pressed(BTN_STOP)) {
            motor_stop();
            return;
         }
      }

      motor_stop();
      output_low(LED_DO);

      if(nguoi_phat_hien) {
         open_door();
         close_door();
      }
   }
}

void main() {
   set_tris_a(0xFF); // Nút nh?n và PIR là input
   set_tris_b(0xFF); // Công t?c hành trình input
   set_tris_c(0x00); // Motor output
   set_tris_d(0x00); // LED output

   output_low(LED_XANH);
   output_low(LED_DO);
   motor_stop();

   while(TRUE) {
      if(is_pressed(BTN_STOP)) {
         motor_stop();
         output_low(LED_XANH);
         output_low(LED_DO);
         delay_ms(300);
         continue;
      }

      if(is_pressed(BTN_OPEN)) {
         open_door();
         output_low(LED_XANH);
         delay_ms(300);
         continue;
      }

      if(is_pressed(BTN_CLOSE)) {
         close_door();
         output_low(LED_XANH);
         delay_ms(300);
         continue;
      }

      if(input(PIR)) {
         open_door();
         close_door();
         output_low(LED_XANH);
      }
   }
}

