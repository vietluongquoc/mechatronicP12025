#include <16F887.h>
#fuses HS, NOWDT, NOPUT, NOLVP
#use delay(clock=12000000)

#define TRIG_PIN PIN_C0
#define ECHO_PIN PIN_C1
#define LED_PIN  PIN_D2

// G?i xung trigger 10us
void send_trigger() {
   output_low(TRIG_PIN);
   delay_us(2);
   output_high(TRIG_PIN);
   delay_us(10);
   output_low(TRIG_PIN);
}

// Ðo d? r?ng xung Echo b?ng Timer1 (tr? v? micro giây)
unsigned int16 measure_echo_time() {
   unsigned int16 time;

   // Ð?i ECHO lên cao
   while(!input(ECHO_PIN));

   // B?t d?u d?m th?i gian khi ECHO lên cao
   set_timer1(0);
   while(input(ECHO_PIN)); // Ch? d?n khi ECHO xu?ng th?p
   time = get_timer1();

   // Timer1 tang m?i 1us (vì ta c?u hình tru?c d? phù h?p)
   return time;
}

// Tính kho?ng cách (don v? cm)
unsigned int16 read_distance_cm() {
   unsigned int16 duration;
   float distance_cm;

   send_trigger();
   delay_us(100); // Ð?i tín hi?u ph?n h?i

   duration = measure_echo_time(); // Ðon v?: us
   distance_cm = (float)duration / 58.0;

   return (unsigned int16)distance_cm;
}

void main() {
   setup_timer_1(T1_INTERNAL | T1_DIV_BY_1); // Timer1 tang m?i 1us (12MHz / 4 = 3MHz, 1 tick = 1us)
   set_tris_c(0b00000010); // RC1 là input, RC0 là output
   set_tris_d(0b11111011); // RD2 là output

   output_low(LED_PIN);

   while(true) {
      unsigned int16 distance = read_distance_cm();

      if(distance > 0 && distance <= 10) {
         output_high(LED_PIN);
      } else {
         output_low(LED_PIN);
      }

      delay_ms(200);
   }
}

