#include <16F887.h>
#fuses XT, NOWDT, NOMCLR
#use delay(clock=12000000)

#define PIR         PIN_A0
#define LED_XANH    PIN_D2
#define LED_DO      PIN_D3
#define IN1         PIN_C0
#define IN2         PIN_C1
#define LIMIT_OPEN  PIN_B0  // pull-up, nh?n = 0
#define LIMIT_CLOSE PIN_B1  // pull-up, nh?n = 0

enum {
  STATE_IDLE,
  STATE_OPEN,
  STATE_PAUSE,
  STATE_CLOSE
} state = STATE_IDLE;

void motor_forward() {
   output_high(IN1);
   output_low(IN2);
}
void motor_reverse() {
   output_low(IN1);
   output_high(IN2);
}
void motor_stop() {
   output_low(IN1);
   output_low(IN2);
}

void main() {
   // c?u hình I/O
   set_tris_a(0xFF);     // RA0 PIR
   set_tris_b(0xFF);     // RB0/RB1 limit switches
   set_tris_c(0x00);     // RC0/RC1 motor
   set_tris_d(0x00);     // RD2/XANH, RD3/DO

   // ban d?u
   motor_stop();
   output_low(LED_XANH);
   output_low(LED_DO);

   while(TRUE) {
     switch(state) {
       case STATE_IDLE:
         // Ð?i phát hi?n ngu?i
         if(input(PIR)) {
           output_high(LED_XANH);
           output_low(LED_DO);
           state = STATE_OPEN;
         }
         break;

       case STATE_OPEN:
         // Quay m? c?a
         output_high(LED_DO);
         motor_forward();
         // khi ch?m limit_open (chân B0 = 0)
         if(!input(LIMIT_OPEN)) {
           motor_stop();
           output_low(LED_DO);
           output_low(LED_XANH);
           // chuy?n qua d?i tru?c khi dóng
           state = STATE_PAUSE;
           // reset b? d?m pause
           setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);
           set_timer1(0);
         }
         break;

       case STATE_PAUSE:
         // báo d? sáng trong pause
         output_high(LED_DO);
         // d?i 5s (timer1 overflow ~5s v?i prescale 8)
         if(get_timer1() >= 0xFFFF - 0x4E20) { 
           // t?m: 0x4E20 = 20000 dec, ~5s
           output_low(LED_DO);
           state = STATE_CLOSE;
         }
         break;

       case STATE_CLOSE:
         // Quay dóng
         output_high(LED_DO);
         motor_reverse();
         // n?u phát hi?n ngu?i gi?a ch?ng thì m? l?i
         if(input(PIR)) {
           motor_stop();
           output_low(LED_DO);
           output_high(LED_XANH);
           state = STATE_OPEN;
           break;
         }
         // n?u ch?m limit_close (B1 = 0) thì d?ng v? idle
         if(!input(LIMIT_CLOSE)) {
           motor_stop();
           output_low(LED_DO);
           state = STATE_IDLE;
         }
         break;
     }
   }
}

